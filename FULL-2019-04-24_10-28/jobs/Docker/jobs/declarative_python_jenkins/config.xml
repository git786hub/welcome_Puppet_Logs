<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.7"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.7">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>sudo yum install python-pip&#xd;
----- from console&#xd;
&#xd;
python code build test deliver junit rest result&#xd;
it will create add2vals script file which you have to just call it from console &#xd;
for eg &#xd;
./add2vals 2 3 &#xd;
output is 5&#xd;
./add2vals abc ABC&#xd;
abcABC&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.65">
    <script>pipeline{
    agent {
        label &apos;master&apos;
    }
    stages{
        stage(&apos;install python_pacakgees&apos;){
            steps{
        //        sh &apos;&apos;&apos; sudo  yum install python-pip -y&apos;&apos;&apos;
                 sh &apos;&apos;&apos; pip install pytest&apos;&apos;&apos;
                 sh &apos;&apos;&apos; pip install pyinstaller&apos;&apos;&apos;
                 
                 
                
            }
        }
    
    
    stage(&apos;code_checkout&apos;) {
  steps {
    git &apos;https://github.com/git786hub/simple-python-pyinstaller-app.git&apos;
   sh &apos;&apos;&apos;python --version&apos;&apos;&apos;
  }
    }
   stage(&apos;Build&apos;) {
  steps {
   
   sh &apos;&apos;&apos;python -m py_compile sources/add2vals.py sources/calc.py&apos;&apos;&apos;
  }
}
 stage(&apos;test&apos;) {
  steps {
   
   sh &apos;&apos;&apos;py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py&apos;&apos;&apos;
  }
  post {
                always {
                    junit &apos;test-reports/results.xml&apos;
                }
            }
}
stage(&apos;Deliver&apos;) {
  steps {
   
   sh &apos;&apos;&apos;pyinstaller --onefile sources/add2vals.py&apos;&apos;&apos;
  }
  post {
                success {
                    archiveArtifacts &apos;dist/add2vals&apos;
                }
            }
}

}

    
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>